{"version":3,"sources":["index.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","global","factory","this","EOL","EOF","objectConverter","columns","Function","map","name","JSON","stringify","join","dsv","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","text","rows","N","I","eof","eol","token","j","slice","replace","row","push","formatRow","formatValue","test","parse","convert","object","format","columnSet","Object","create","forEach","column","concat","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","dsvFormat","defineProperty","value","define","amd","d3","2","d3Dsv","responseBlob","response","ok","status","statusText","blob","responseArrayBuffer","arrayBuffer","responseText","input","init","fetch","then","dsvParse","arguments","undefined","responseJson","json","parser","type","text$$1","DOMParser","parseFromString","xml","html","svg","buffer","image","Promise","resolve","reject","Image","key","onerror","onload","src","d3-dsv","3","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Map","opts","instance","Constructor","TypeError","_classCallCheck","year","protoProps","staticProps","draw","console","log","prototype","4","_d3Fetch","_electionMap","url","data","../../src/js/election-map.js","d3-fetch"],"mappings":"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","file":"../index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n// https://d3js.org/d3-dsv/ v1.0.10 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction dsv(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n},{}],2:[function(require,module,exports){\n// https://d3js.org/d3-fetch/ v1.1.2 Copyright 2018 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dsv')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dsv'], factory) :\n(factory((global.d3 = global.d3 || {}),global.d3));\n}(this, (function (exports,d3Dsv) { 'use strict';\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = d3Dsv.dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv = dsvParse(d3Dsv.csvParse);\nvar tsv = dsvParse(d3Dsv.tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text$$1) {\n      return (new DOMParser).parseFromString(text$$1, type);\n    });\n  };\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nexports.blob = blob;\nexports.buffer = buffer;\nexports.dsv = dsv;\nexports.csv = csv;\nexports.tsv = tsv;\nexports.image = image;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.html = html;\nexports.svg = svg;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n},{\"d3-dsv\":1}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Map = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Map =\n/*#__PURE__*/\nfunction () {\n  function Map(opts) {\n    _classCallCheck(this, Map);\n\n    this.year = opts.year;\n  }\n\n  _createClass(Map, [{\n    key: \"init\",\n    value: function init() {\n      this.draw();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      console.log(this.year);\n    }\n  }]);\n\n  return Map;\n}();\n\nexports.Map = Map;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar _d3Fetch = require(\"d3-fetch\");\n\nvar _electionMap = require(\"../../src/js/election-map.js\");\n\nvar year = '2008';\nvar url = \"https://raw.githubusercontent.com/TimeMagazine/presidential-election-results/master/data/results_\".concat(year, \".json\");\nconsole.log('this is working');\n(0, _d3Fetch.json)(url).then(function (data) {\n  console.log(data);\n  var electionMap = new _electionMap.Map({\n    year: year\n  });\n  electionMap.init();\n});\n\n},{\"../../src/js/election-map.js\":3,\"d3-fetch\":2}]},{},[4])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"]}